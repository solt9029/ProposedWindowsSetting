#include "./lib/ScrollBar.hsp"
#include "user32.as"

// クリックした場所のXY座標を取得するために必要
#define ctype LOWORD(%1) (%1 & $FFFF)
#define ctype HIWORD(%1) (%1 >> 16 & $FFFF)

// 画像オリジナルの大きさ
PIC_W = 298.0 * 0.7
PIC_H = 284.0 * 0.7

// アイコンの大きさ
ICON_W = 300.0 * 0.7
ICON_H = 285.0 * 0.7

BAR_SIZE = 16

// 横に並ぶアイコンの個数
x_num = 5

settings = "display", "bluetooth", "network-status", "personalization", "yourinfo", "dateandtime", "easeofaccess-narrator", "privacy", "windowsupdate"
dim positions, 9, 9
gosub *init_positions // positionsを初期化する
gosub *init_window

prev_ginfo_winy = ICON_H * 3 // 直前の幅の大きさ
prev_ginfo_winx = ICON_W * 5

y_bar_id = 0
gosub *putYScrollBar

onclick gosub *windowClicked

repeat
	gsel 0
	redraw 0
	
	color 255, 255, 255
	boxf
	
	x_num = ginfo_winx * 1.0 / ICON_W * 1.0
	
	if (x_num > 9) {
		x_num = 9
	}
	
	repeat 9
		pos (cnt \ x_num) * ICON_W, (cnt / x_num) * ICON_H
		gzoom ICON_W, ICON_H, positions(x_num - 1, cnt) + 1, 0, 0, PIC_W, PIC_H
	loop
	
	redraw 1
	
	if (prev_ginfo_winy != ginfo_winy || prev_ginfo_winx != ginfo_winx) {
		gsel y_bar_id
		clrobj
		gosub *putYScrollBar
		groll 0, 0
	}
	prev_ginfo_winy = ginfo_winy
	prev_ginfo_winx = ginfo_winx
	
	gosub *getYScroll
	
	await 100
loop

stop



*windowClicked
	x = (LOWORD(lparam) + ginfo_vx) / ICON_W
	y = (HIWORD(lparam) + ginfo_vy) / ICON_H
	
	if (x + y * x_num >= 9) {
		return
	}
	
	icon_num = positions(x_num - 1, x + y * x_num) // クリックされたアイコンの番号
	
	// dialog("bat\\" + settings(icon_num) + ".bat")
	exec "bat\\" + settings(icon_num) + ".bat"
	
	return



*init_window
	screen 0, ginfo(20) * 10, ginfo(21) * 10

	GetWindowLong hwnd, -16
	SetWindowLong hwnd, -16, stat | $10000 | $40000
	
	width ICON_W * 5 + 16, ICON_H * 2  + 16

	// 画像の読み込みと表示
	repeat 9
		buffer cnt + 1
		picload "img\\" + cnt + ".png"
		gsel 0
		pos (cnt \ 5) * ICON_W, (cnt / 5) * ICON_H
		gzoom ICON_W, ICON_H, cnt + 1, 0, 0, PIC_W, PIC_H
	loop
	
	return



*init_positions
	positions_9 = 0,1,2,3,4,8,7,6,5
	positions_8 = 0,1,2,3,4,8,7,6,5
	positions_7 = 0,1,2,3,4,8,7,5,6
	positions_6 = 0,1,2,3,4,8,5,6,7
	positions_5 = 0,1,2,3,4,5,6,7,8
	positions_4 = 0,1,2,3,5,6,7,8,4
	positions_3 = 0,1,2,5,6,7,4,3,8
	positions_2 = 0,1,5,6,4,3,2,7,8
	positions_1 = 0,5,4,2,8,1,6,3,7
	
	repeat 9
		positions(8, cnt) = positions_9(cnt)
	loop
	
	repeat 9
		positions(7, cnt) = positions_8(cnt)
	loop
	
	repeat 9
		positions(6, cnt) = positions_7(cnt)
	loop
	
	repeat 9
		positions(5, cnt) = positions_6(cnt)
	loop
	
	repeat 9
		positions(4, cnt) = positions_5(cnt)
	loop
	
	repeat 9
		positions(3, cnt) = positions_4(cnt)
	loop
	
	repeat 9
		positions(2, cnt) = positions_3(cnt)
	loop
	
	repeat 9
		positions(1, cnt) = positions_2(cnt)
	loop
	
	repeat 9
		positions(0, cnt) = positions_1(cnt)
	loop
	
	return
	


*putYScrollBar
	gsel 0
	
	pos ginfo_winx - BAR_SIZE, 0
	ScrollBar_Create BAR_SIZE, ginfo_winy, 1
	y_bar_id = stat
	
	y_num = 3
	if (9 \ x_num == 0) {
		y_num = 9 / x_num
	} else {
		y_num = 9 / x_num + 1
	}
	
	ScrollBar_SetRange y_bar_id, 0, y_num * ICON_H, ginfo_winy
	ScrollBar_SetStep y_bar_id, ginfo_winy / 4, ginfo_winy
	ScrollBar_SetPos y_bar_id, 0
	
	ScrollBar_SetSubLabel *getYScroll
	return
	


*getYScroll
	gsel 0
    groll 0, ScrollBar_GetPos(y_bar_id)
    title "x_scroll" + str(ginfo_vx) + "y_scroll:" + str(ginfo_vy) // デバッグ用：タイトルにスクロール量が表示される
	return
	

/*
*watchYScroll
	repeat
		await 10
		gosub *getYScroll
	loop
	return*/